
// IMU Class
//  m_imu = new IMU(angleArr, 5);

// m_imu->loop(angleArr);
// Serial.print(angleArr[0]);
// Serial.print(" | ");
// Serial.print(angleArr[1]);
// Serial.print(" | ");
// Serial.println(angleArr[2]);
// Serial.print(" | ");


// for(int i=0;i<100;i++) {
//   m_controller1->driveMotor(0.01 * i - 0.5);
//   delay(1000);
// }



// Serial.println(m_controller1->getEncoderRate());

//     input = m_controller1->getEncoderRate();
//     Serial.println(input);
//     PID1.Compute();
//      Serial.print(input); Serial.print(","); Serial.println(output);
//   //   Serial.println(m_controller1->getEncoderRate());
//      m_controller1->driveMotor(output);


// for(int i=0;i<100;i++) {
//    m_controller1->driveMotor(0.5*i-0.5);
//    delay(2000);
//    // m_controller1->driveMotor(-1);
//    // delay(2000);
// }
//   m_controller1->driveMotor(0.7);

//   Serial.println(m_controller1->readEncoder());

//    Serial.println(m_controller1->getEncoderRate());
//
//


// m_controller1->updateTickCount(m_numEncoder);
// m_numEncoder = 0;
// m_currTime = millis(); //Update current time
// m_controller1->updateTimer(m_currTime);
